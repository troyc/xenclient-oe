--- network-manager-applet-0.9.2.0/src/wireless-security/ws-wpa-psk.c	2017-01-13 10:49:45.618800964 -0500
+++ network-manager-applet-0.9.2.0/src/wireless-security/ws-wpa-psk.c	2017-01-17 15:54:49.099333090 -0500
@@ -27,6 +27,8 @@
 #include "wireless-security.h"
 #include "helpers.h"
 
+#include <openssl/evp.h>
+
 #define WPA_PMK_LEN 32
 
 struct _WirelessSecurityWPAPSK {
@@ -87,6 +89,17 @@
 	gtk_size_group_add_widget (group, widget);
 }
 
+//adapted from stackoverflow.com/a/22795472
+static void
+PBKDF2_HMAC_SHA_1nat_string (const char* pass, const char* salt, int iterations, unsigned int outputBytes, char* hexResult)
+{
+    unsigned int i;
+    unsigned char digest[outputBytes];
+    PKCS5_PBKDF2_HMAC_SHA1 (pass, strlen (pass), (const unsigned char*) salt, strlen (salt), iterations, outputBytes, digest);
+    for (i = 0; i < sizeof (digest); i++)
+        snprintf (hexResult + (i * 2), 3, "%02x", digest[i]);
+}
+
 static void
 fill_connection (WirelessSecurity *parent, NMConnection *connection)
 {
@@ -112,6 +125,18 @@
 
 	widget = GTK_WIDGET (gtk_builder_get_object (parent->builder, "wpa_psk_entry"));
 	key = gtk_entry_get_text (GTK_ENTRY (widget));
+
+	if (strlen (key) < 64) {
+		char keyHash[64 + 1];
+		const GByteArray *ssid = nm_setting_wireless_get_ssid (s_wireless);
+		GString *ssidNullTerminated = g_string_new_len ((const gchar *)ssid->data, ssid->len);
+
+		PBKDF2_HMAC_SHA_1nat_string (key, ssidNullTerminated->str, 4096, 32, keyHash);
+		key = keyHash;
+
+		g_string_free (ssidNullTerminated, TRUE);
+	}
+
 	g_object_set (s_wireless_sec, NM_SETTING_WIRELESS_SECURITY_PSK, key, NULL);
 
 	wireless_security_clear_ciphers (connection);
